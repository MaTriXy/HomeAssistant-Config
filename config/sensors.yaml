################################################################################
#
#SENSOR
#
#################################################################################
  # - platform: yr

  #system monitor on to know disk use , memory use,process use  etc...
  - platform: systemmonitor
    resources:
      - type: memory_use_percent
      - type: processor_use
      - type: last_boot
      # - type: disk_use_percent #not working on unraid (give the docker size only)
      #   arg: /home #unraid cache drive
  #To monitor DataBase File size    
  - platform: filesize
    file_paths:
      - /config/home-assistant_v2.db #Docker
      #- /home/homeassistant/.homeassistant/home-assistant_v2.db #Linux
  #To monitor BackUp Folder size 
  - platform: folder
    folder: /config/backup/hass #Docker
  #Time that Home asisstant is Up and runing #TODO
  - platform: uptime
    name: Time Online HA
    unit_of_measurement: minutes #days
    
  #Current time and date formats 
  - platform: time_date
    display_options:
      - 'date_time'
      - 'time'
      
  #Time in Days for SSL to Expired
  # made the cert with http://certbot.eff.org/ (SSL with NGINX)
  - platform: cert_expiry  #For example google.com 
    name: SSL Router
    host: !secret routerSSL
  - platform: cert_expiry
    name: SSL HASS
    host: !secret hassSSL
  - platform: cert_expiry
    name: SSL IDE
    host: !secret c9IdeSSL
  - platform: cert_expiry
    name: SSL Server
    host: !secret serverSSL
  - platform: cert_expiry
    name: SSL HomePage
    host: !secret HomePageSSL
  - platform: cert_expiry
    name: SSL CCTV
    host: !secret CCTVSSL   
  - platform: cert_expiry
    name: SSL Unifi
    host: !secret UnifiSSL
  - platform: cert_expiry
    name: SSL UNMS
    host: !secret UNMS_SSL

  #Travel time From Home to Work
  - platform: waze_travel_time
    name: home to adoraim
    origin: !secret HomeCoordinates
    destination: !secret Work1Coordinates
    region: 'IL'
  #Travel time From Home to Work2
  - platform: waze_travel_time
    name: home to otniel
    origin: !secret HomeCoordinates
    destination: !secret Work2Coordinates
    region: 'IL'

#############
##
## Boiler pow1 sensors (an Sonoff POW device)
##
#############
  - platform: mqtt
    name: "POW1 energy today"
    state_topic: "tele/sonoff1/SENSOR"
    value_template: '{{ value_json["ENERGY"]["Today"] }}'
    unit_of_measurement: "kWh"
  - platform: mqtt
    name: "POW1 energy total"
    state_topic: "tele/sonoff1/SENSOR"
    value_template: '{{ value_json["ENERGY"]["Total"] }}'
    unit_of_measurement: "kWh"
  - platform: mqtt
    name: "POW1 Watt"
    state_topic: "tele/sonoff1/SENSOR"
    value_template: '{{ value_json["ENERGY"]["Power"] }}'
    unit_of_measurement: "וואט" #W
  - platform: mqtt
    name: "POW1 Voltage"
    state_topic: "tele/sonoff1/SENSOR"
    value_template: '{{ value_json["ENERGY"]["Voltage"] }}'
    unit_of_measurement: "וולט" #V
  - platform: mqtt
    name: "POW1 Current"
    state_topic: "tele/sonoff1/SENSOR"
    value_template: '{{ value_json["ENERGY"]["Current"] }}'
    unit_of_measurement: "אמפר" #Amperes
  - platform: mqtt
    name: "POW1 total cost"
    state_topic: "tele/sonoff1/SENSOR"
    value_template: '{{ (value_json["ENERGY"]["Total"] * 0.5404) | round(3) }}'
    #ILS OR USD (Depends on local currency) Just change the value of "0.5404" to your local elctricity price
    unit_of_measurement: "₪" # USD / Other local currency

####Part of automation -boiler on/ off with input numbers#####   
####################################### boiler(POW1) on CLOCK #######################################
  - platform: template
    sensors:
      boiler_on_clock_hour:
        value_template: '{{ states.input_number.boiler_on_clock_hour.state | int }}'
      boiler_on_clock_minute:
        value_template: '{{ states.input_number.boiler_on_clock_minute.state | int }}'
      boiler_on_clock_time:
        value_template: >-
          {{ states.sensor.boiler_on_clock_hour.state }}:
          {%- if states.sensor.boiler_on_clock_minute.state|length == 1 -%}
            0
          {%- endif -%}
            {{ states.sensor.boiler_on_clock_minute.state }}
      boiler_on_clock_time_long:
        value_template: >-
          {% if states.sensor.boiler_on_clock_hour.state|length == 1 -%}
            0
          {%- endif -%}
            {{ states.sensor.boiler_on_clock_hour.state }}:
          {%- if states.sensor.boiler_on_clock_minute.state|length == 1 -%}
            0
          {%- endif -%}
            {{ states.sensor.boiler_on_clock_minute.state }}
####################################### boiler (POW1) OFF CLOCK #######################################
  - platform: template
    sensors:
      boiler_off_clock_hour:
        value_template: '{{ states.input_number.boiler_off_clock_hour.state | int }}'
      boiler_off_clock_minute:
        value_template: '{{ states.input_number.boiler_off_clock_minute.state | int }}'
      boiler_off_clock_time:
        value_template: >-
          {{ states.sensor.boiler_off_clock_hour.state }}:
          {%- if states.sensor.boiler_off_clock_minute.state|length == 1 -%}
            0
          {%- endif -%}
            {{ states.sensor.boiler_off_clock_minute.state }}
      boiler_off_clock_time_long:
        value_template: >-
          {% if states.sensor.boiler_off_clock_hour.state|length == 1 -%}
            0
          {%- endif -%}
            {{ states.sensor.boiler_off_clock_hour.state }}:
          {%- if states.sensor.boiler_off_clock_minute.state|length == 1 -%}
            0
          {%- endif -%}
            {{ states.sensor.boiler_off_clock_minute.state }}
###############END#########################

#############
##
##  POW2 sensors (an Sonoff POW device) - Currently an Switch for CCTV
##
#############
  - platform: mqtt
    name: "POW2 energy today"
    state_topic: "tele/sonoff2/SENSOR"
    value_template: '{{ value_json["ENERGY"]["Today"] }}'
    unit_of_measurement: "kWh"
  - platform: mqtt
    name: "POW2 energy yesterday"
    state_topic: "tele/sonoff2/SENSOR"
    value_template: '{{ value_json["ENERGY"]["Yesterday"] }}'
    unit_of_measurement: "kWh"
  - platform: mqtt
    name: "POW2 energy total"
    state_topic: "tele/sonoff2/SENSOR"
    value_template: '{{ value_json["ENERGY"]["Total"] }}'
    unit_of_measurement: "kWh"
  - platform: mqtt
    name: "POW2 Watt"
    state_topic: "tele/sonoff2/SENSOR"
    value_template: '{{ value_json["ENERGY"]["Power"] }}'
    unit_of_measurement: "וואט" #W
  - platform: mqtt
    name: "POW2 Voltage"
    state_topic: "tele/sonoff2/SENSOR"
    value_template: '{{ value_json["ENERGY"]["Voltage"] }}'
    unit_of_measurement: "וולט" #V
  - platform: mqtt
    name: "POW2 Current"
    state_topic: "tele/sonoff2/SENSOR"
    value_template: '{{ value_json["ENERGY"]["Current"] }}'
    unit_of_measurement: "אמפר" #Amperes
  - platform: mqtt
    name: "POW2 total cost"
    state_topic: "tele/sonoff2/SENSOR"
    value_template: '{{ ( value_json["ENERGY"]["Total"] * 0.5404) | round(3) }}'
    #ILS OR USD (Depends on local currency) Just change the value of "0.5404" to your local elctricity price
    unit_of_measurement: "₪" # USD / Other local currency
    ########################################

  #   #Add More info for device xiaomi PowerStrip
  # - platform: template
  #   sensors:
  #     power_strip_temp:
  #       friendly_name: 'טמפרטורת מפצל' #power Strip Temperature
  #       value_template: '{{ states.switch.xiaomi_powerstrip.attributes.temperature }}'
  #       unit_of_measurement: "°מעלות" #temperature in C
  #     power_strip_watt:
  #       friendly_name: 'צריכה נוכחית ' #Current W
  #       value_template: '{{ states.switch.xiaomi_powerstrip.attributes.load_power }}'
  #       unit_of_measurement: W
  #     power_strip_total_cost:
  #         friendly_name: 'עלות לשעת פעילות' #price per hour 
  #         value_template: '{{ (states.switch.xiaomi_powerstrip.attributes.load_power *0.5404 *0.001)| round(3)}}'
  #         #ILS OR USD (Depends on local currency) Just change the value of "0.5404" to your local elctricity price
  #         unit_of_measurement: "₪" # USD / Other local currency

    ####################################### ALARM CLOCK #######################################
    #alarm clock that send a notifaction to phone (via iOS app-see Automations)
  - platform: template
    sensors:
      alarm_clock_hour:
        value_template: '{{ states.input_number.alarm_clock_hour.state | int }}'
      alarm_clock_minute:
        value_template: '{{ states.input_number.alarm_clock_minute.state | int }}'
      alarm_clock_time:
        value_template: >-
          {{ states.sensor.alarm_clock_hour.state }}:
          {%- if states.sensor.alarm_clock_minute.state|length == 1 -%}
            0
          {%- endif -%}
            {{ states.sensor.alarm_clock_minute.state }}
      alarm_clock_time_long:
        value_template: >-
          {% if states.sensor.alarm_clock_hour.state|length == 1 -%}
            0
          {%- endif -%}
            {{ states.sensor.alarm_clock_hour.state }}:
          {%- if states.sensor.alarm_clock_minute.state|length == 1 -%}
            0
          {%- endif -%}
            {{ states.sensor.alarm_clock_minute.state }}
####################################### End of ALARM CLOCK#######################################
#######################################CURRENCIES Rates Via XML rate in Offical BANK OF ISRAEL#######################################
  - platform: command_line
    name: Exchange Date
    command: "curl get https://www.boi.org.il/currency.xml?curr=27 2>&1 | grep LAST_UPDATE | grep -o '[0-9]*-[0-9]*-[0-9]*' "
    scan_interval: 43200 #12 Hours

  - platform: command_line
    name: Dollar(USD)
    command: "curl get https://www.boi.org.il/currency.xml?curr=01 2>&1 | grep RATE | grep -o '[0-9].*[0-9]' "
    scan_interval: 43200 #12 Hours

  - platform: command_line
    name: Euro(EUR)
    command: "curl get https://www.boi.org.il/currency.xml?curr=27 2>&1 | grep RATE | grep -o '[0-9].*[0-9]' "
    scan_interval: 43200 #12 Hours

  - platform: command_line
    name: Pound(GBP)
    command: "curl get https://www.boi.org.il/currency.xml?curr=02 2>&1 | grep RATE | grep -o '[0-9].*[0-9]' "
    scan_interval: 43200 #12 Hours
###########################################################################
    
###### Latest config backup time
  - platform: command_line
    command: "bash /config/scripts/latest_Hass_backup.py"
    name: 'Latest HA Backup'
    scan_interval: 43200 #12 Hours
    

####################################### Temp and Hum From sensibo #######################################
  - platform: template
    sensors:
      sensibo1_temp:
        friendly_name: 'טמפרטורת סלון' #power Strip Temperature
        value_template: '{{ states.climate.living_room.attributes.current_temperature }}'
        unit_of_measurement: "°C" #"°מעלות" #temperature in C
        entity_id: climate.living_room
      sensibo1_humidity:
        friendly_name: 'לחות סלון' #power Strip Temperature
        value_template: '{{ states.climate.living_room.attributes.current_humidity }}'
        unit_of_measurement: "%"
        entity_id: climate.living_room
        
        
####################################### https://sharethelove.io/xiaomi-vacuum-card #######################################        
  - platform: template
    sensors:
      vacuum_status:
        friendly_name: "Vacuum - Status"
        # value_template: "{{ states.vacuum.xiaomi_vacuum.attributes.status }}:מצב"
        value_template: >-
          {%if states.vacuum.xiaomi_vacuum.attributes.status == 'Charging' %}מצב:בטעינה
          {% elif states.vacuum.xiaomi_vacuum.attributes.status == 'Cleaning' %}מצב:מנקה
          {% elif states.vacuum.xiaomi_vacuum.attributes.status == 'Spot cleaning' %}מצב:מנקה נקודתי
          {% elif states.vacuum.xiaomi_vacuum.attributes.status == 'Returning home' %}מצב:בחזרה לבסיס
          {% elif states.vacuum.xiaomi_vacuum.attributes.status == 'Paused' %}מצב:בהשהייה
          {% elif states.vacuum.xiaomi_vacuum.attributes.status == 'Idle' %}מצב:לא פעיל
          {% elif states.vacuum.xiaomi_vacuum.attributes.status == 'Error' %}מצב:שגיאה,בדוק מה הסיבה באפליקציה          
          {% elif states.vacuum.xiaomi_vacuum.attributes.status == 'Charger disconnected' %}מצב:מטען מנותק          
          {%- else -%}
            {{states.vacuum.xiaomi_vacuum.attributes.status}}:מצב
          {% endif %}

################# A platform which allows you to get information sucessfull logins to Home Assistant ################# 
################# https://github.com/custom-components/sensor.authenticated ################# 
  - platform: authenticated
    provider: extreme
    enable_notification: false
    # enable_notification: true #on by default
    

#################   https://sharethelove.io/cards/greeter-card  ################# 
  - platform: template
    sensors:
      time_of_day:
        value_template: >
          {% set current_hour = strptime(states('sensor.time'), "%H:%M").hour %}
          {% if current_hour < 12 %}
            בוקר טוב
          {% elif 12 <= current_hour < 18 %}
            צהריים טובים
          {% elif 18 <= current_hour < 22 %}
            ערב טוב
          {% else %}
            לילה טוב
          {% endif %}
          
  - platform: template
    sensors:
      greeter_card_info:
        value_template: > 
          פרטי:
          האירוע הבא {{ as_timestamp(states.calendar.private.attributes.start_time) | timestamp_custom('- %d/%m בשעה %H:%M') }}
  - platform: template
    sensors:
      greeter_card_info_2:
        value_template: > 
          עבודה:
          האירוע הבא {{ as_timestamp(states.calendar.work.attributes.start_time) | timestamp_custom('- %d/%m בשעה %H:%M') }}
######################Outside Temperature with animated icons ################################
#Not in use , Working good! 
  # - platform: template
  #   sensors:
  #     outside_temp:
  #       friendly_name: "Outside Temperature"
  #       # unit_of_measurement: '°C'
  #       value_template: "{{ states.weather.dark_sky.attributes.temperature }}"
  #       icon_template: >
  #         {% if is_state("weather.dark_sky", "sunny") -%}
  #           mdi:weather-sunny
  #         {% elif is_state('weather.dark_sky', 'clear-night') -%}
  #           mdi:weather-night
  #         {% elif is_state('weather.dark_sky', 'rainy') -%}
  #           mdi:weather-rainy
  #         {% elif is_state('weather.dark_sky', 'snow') -%}
  #           mdi:weather-snowy
  #         {% elif is_state('weather.dark_sky', 'sleet') -%}
  #           mdi:weather-snowy-rainy
  #         {% elif is_state('weather.dark_sky', 'wind') -%}
  #           mdi:weather-windy-variant
  #         {% elif is_state('weather.dark_sky', 'windy-variant') -%}
  #           mdi:weather-windy-variant     
  #         {% elif is_state('weather.dark_sky', 'windy') -%}
  #           mdi:weather-windy-variant
  #         {% elif is_state('weather.dark_sky', 'fog') -%}
  #           mdi:weather-fog
  #         {% elif is_state('weather.dark_sky', 'cloudy') -%}
  #           mdi:weather-cloudy
  #         {% elif is_state('weather.dark_sky', 'partly-cloudy-day') -%}
  #           mdi:weather-partlycloudy
  #         {% elif is_state('weather.dark_sky', 'hail') -%}
  #           mdi:weather-hail
  #         {% elif is_state('weather.dark_sky', 'thunderstorm') -%}
  #           mdi:weather-lightning
  #         {% else %}
  #           mdi:help-circle
  #         {% endif %}

  #       entity_picture_template: >
  #         {% if is_state("weather.dark_sky", "sunny") -%}
  #           /local/icons/weather_icons/animated/day.svg
  #         {% elif is_state('weather.dark_sky', 'clear-night') -%}
  #           /local/icons/weather_icons/animated/night.svg
  #         {% elif is_state('weather.dark_sky', 'snow') -%}
  #           /local/icons/weather_icons/animated/snow.svg
  #         {% elif is_state('weather.dark_sky', 'sleet') -%}
  #           /local/icons/weather_icons/animated/sleet.svg
  #         {% elif is_state('weather.dark_sky', 'wind') -%}
  #           /local/icons/weather_icons/animated/wind.svg
  #         {% elif is_state('weather.dark_sky', 'fog') -%}
  #           /local/icons/weather_icons/animated/fog.svg
  #         {% elif is_state('weather.dark_sky', 'cloudy') -%}
  #           /local/icons/weather_icons/animated/cloudy.svg
  #         {% elif is_state('weather.dark_sky', 'partly-cloudy-day') -%}
  #           /local/icons/weather_icons/animated/partly-cloudy-day-1.svg
  #         {% elif is_state('weather.dark_sky', 'hail') -%}
  #           /local/icons/weather_icons/animated/hail.svg
  #         {% elif is_state('weather.dark_sky', 'thunderstorm') -%}
  #           /local/icons/weather_icons/animated/thunderstorm.svg
  #         {% elif is_state('weather.dark_sky', 'hail') -%}
  #           /local/icons/weather_icons/animated/rainy-7.svg
  #         {% elif is_state('weather.dark_sky', 'lightning') -%}
  #           /local/icons/weather_icons/animated/thunder.svg
  #         {% elif is_state('weather.dark_sky', 'lightning-rainy') -%}
  #           /local/icons/weather_icons/animated/thunder.svg
  #         {% elif is_state('weather.dark_sky', 'cloudy') -%}
  #           /local/icons/weather_icons/animated/cloudy.svg
  #         {% elif is_state('weather.dark_sky', 'partlycloudy') -%}
  #           /local/icons/weather_icons/animated/cloudy.svg
  #         {% elif is_state('weather.dark_sky', 'pouring') -%}
  #           /local/icons/weather_icons/animated/rainy-6.svg
  #         {% elif is_state('weather.dark_sky', 'rainy') -%}
  #           /local/icons/weather_icons/animated/rainy-6.svg
  #         {% elif is_state('weather.dark_sky', 'snowy') -%}
  #           /local/icons/weather_icons/animated/snowy-6.svg
  #         {% elif is_state('weather.dark_sky', 'snowy-rainy') -%}
  #           /local/icons/weather_icons/animated/rainy-6.svg
  #         {% elif is_state('weather.dark_sky', 'windy') -%}
  #           /local/icons/weather_icons/animated/cloudy.svg
  #         {% else %}
  #           /local/icons/weather_icons/animated/help.svg
  #         {% endif %}

####################################### IMS Wheather Short ####################################### 
#Working Good , Not in Use
  # - platform: command_line
  #   name: IMSWeather
  #   command: " curl get http://www.ims.gov.il/ims/rss/beer_sheva.xml 2>&1 | grep -ni .*title=  | grep -o [א-ת]* "
  #   scan_interval: 43200 #12 Hours    
    # command: "echo 'התחזית להיום: '; curl get http://www.ims.gov.il/ims/rss/beer_sheva.xml 2>&1 | grep -ni .*title=  | grep -o [א-ת]* "
####################################### new ip login? ####################################### 
  - platform: template
    sensors:
      authentication_known_ip_info:
        value_template: >-
          {% if is_state('sensor.last_successful_authentication.attributes.new_ip', 'true') %}
            כן
          {% else %}
            לא
          {% endif %}
####################################### CPU,HDD,SSD Temperatures #######################################           
  - platform: command_line
    name: 'CPU temp'
    unit_of_measurement: "°מעלות" #temperature in C "°C"
    scan_interval: 120 #2 min
    command: "cat /sys/class/thermal/thermal_zone2/temp"
    value_template: '{{ (value | multiply(0.001)) | round(1) }}'
    
  - platform: command_line #SAMSUNG EVO 860
    name: 'HDD_sdb_temp'
    unit_of_measurement: "°מעלות" #temperature in C "°C"
    scan_interval: 120 #2 min
    command: "hddtemp -n /dev/sdb"
    
  - platform: command_line #OR Parity 4TB #WD1TB
    name: 'HDD_sdc_temp'
    unit_of_measurement: "°מעלות" #temperature in C "°C"
    scan_interval: 120 #2 min
    command: "hddtemp -n /dev/sdc"

  - platform: command_line #OR Seagate 4TB #WD 4TB
    name: 'HDD_sdd_temp'
    unit_of_measurement: "°מעלות" #temperature in C "°C"
    scan_interval: 120 #2 min
    command: "hddtemp -n /dev/sdd"
####################################### Disks Usage #######################################   
  - platform: command_line 
    command: "bash /config/scripts/main_disk_usage.sh"
    name: 'main hdd usage'
    unit_of_measurement: "%" #temperature in C
    scan_interval: 600 #10 min  

  - platform: command_line 
    command: "bash /config/scripts/ssd_usage.sh"
    name: 'ssd usage'
    unit_of_measurement: "%" #temperature in C
    scan_interval: 600 #10 min
####################################### www.17track.net ####################################### 
  - platform: seventeentrack
    username: !secret 17TrackEmail
    password: !secret 17TrackPassword
    
################################### Weather Dark Sky SENSOR #####################################
  - platform: darksky
    api_key: !secret DarkSky_API_KEY
    language: he
    forecast:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
    monitored_conditions:
      - icon
      - summary
      - humidity
      - temperature
      - temperature_high
      - temperature_low
      - wind_speed #?
      - wind_bearing #?
      - precip_probability
      - precip_intensity
      - precip_intensity_max
      - daily_summary
      - pressure
      - visibility
      - apparent_temperature #Feels like
    scan_interval:
      minutes: 5
#############################Unraid Server System Uptime ################################## 
  - platform: template
    sensors:      
      unraid_uptime:
        friendly_name: Unraid Uptime
        entity_id: sensor.time #to make the template update (without this line , the sensor update once,since the "last_boot" update once per startup)
        value_template: >-
            {% set up_time = as_timestamp(now()) - as_timestamp(states('sensor.last_boot')) %}
            {% set minutes = (up_time // 60) | int %}
            {% set hours = (minutes // 60) %}
            {% set days = (hours // 24) %}
            {% set weeks = (days // 7) %}
            {% set minutes = (minutes % 60) %}
            {% set hours = (hours % 24) %}
            {% set days = (days % 7) %}
          
            {%- if weeks > 0 -%}
              {%- if weeks == 1 -%}
                שבוע אחד
              {%- else -%}
                {{ weeks }} שבועות
              {%- endif -%}
            {%- endif -%}
            
            {%- if days > 0 -%}
              {%- if weeks > 0 -%}
                {{ ' ו' }}
              {%- endif -%}
              {%- if days == 1 -%}
                יום אחד
              {%- else -%}
                {{ days }} ימים
              {%- endif -%}
            {%- endif -%}
            
            {%- if hours > 0 -%}
              {%- if weeks > 0 or days > 0 -%}
                {{ ' ו' }}
              {%- endif -%}
              {%- if hours == 1 -%}
                שעה אחת
              {%- else -%}
                {{ hours }} שעות
              {%- endif -%}
            {%- endif -%}
            
            {%- if minutes > 0 -%}
              {%- if weeks > 0 or days > 0 or hours > 0 -%}
                {{ ' ו' }}
              {%- endif -%}
              {%- if minutes == 1 -%}
                דקה
              {%- else -%}
                {{ minutes }} דקות
              {%- endif -%}
            {%- endif -%}
            
        # value_template: >
        #   {% set up_time = as_timestamp(now()) - as_timestamp(states('sensor.last_boot')) %}
          
        #     {% set minutes = (up_time // 60) | int %}
        #     {% set hours = (minutes // 60) %}
        #     {% set days = (hours // 24) %}
        #     {% set weeks = (days // 7) %}
        #     {% set minutes = (minutes % 60) %}
        #     {% set hours = (hours % 24) %}
        #     {% set days = (days % 7) %}
          
        #     {% macro phrase(value, name) %}
        #         {%- set value = value %}
        #         {%- set end = '' if value > 1 else '' %}
        #         {{- '{} {}{}'.format(value, name, end) if value | int > 0 else '' }}
        #     {%- endmacro %}
                      
        #     {% set text = [ phrase(weeks, 'שבועות'), phrase(days, 'ימים'), phrase(hours, 'שעות'), phrase(minutes, 'דקות') ] | select('!=','') | list | join(', ') %}
          
        #   {% set last_comma = text.rfind(',') %}
        #   {% set text = text[:last_comma] + ' ו' + text[last_comma + 1:] %}
          
        #   {{ text }}          
      hass_uptime:
        friendly_name: Hass Uptime
        value_template: >-
            {% set minutes = (states('sensor.time_online_ha')) | int %}
            {% set hours = (minutes // 60) %}
            {% set days = (hours // 24) %}
            {% set weeks = (days // 7) %}
            {% set minutes = (minutes % 60) %}
            {% set hours = (hours % 24) %}
            {% set days = (days % 7) %}

            {%- if weeks > 0 -%}
              {%- if weeks == 1 -%}
                שבוע אחד
              {%- else -%}
                {{ weeks }} שבועות
              {%- endif -%}
            {%- endif -%}
            
            {%- if days > 0 -%}
              {%- if weeks > 0 -%}
                {{ ' ו' }}
              {%- endif -%}
              {%- if days == 1 -%}
                יום אחד
              {%- else -%}
                {{ days }} ימים
              {%- endif -%}
            {%- endif -%}
            
            {%- if hours > 0 -%}
              {%- if weeks > 0 or days > 0 -%}
                {{ ' ו' }}
              {%- endif -%}
              {%- if hours == 1 -%}
                שעה אחת
              {%- else -%}
                {{ hours }} שעות
              {%- endif -%}
            {%- endif -%}
            
            {%- if minutes > 0 -%}
              {%- if weeks > 0 or days > 0 or hours > 0 -%}
                {{ ' ו' }}
              {%- endif -%}
              {%- if minutes == 1 -%}
                דקה
              {%- else -%}
                {{ minutes }} דקות
              {%- endif -%}
            {%- endif -%}


####################################### NOT IN USE ####################################### 
  # - platform: zoneminder
  #   include_archived: false
    
  # - platform: command_line #working good in ubuntu  - not working on Docker
  #   command: "bash /config/scripts/GetCPUTemp.sh"
  #   name: 'CPU temp'
  #   unit_of_measurement: "°מעלות" #temperature in C
  #   scan_interval: 120 #2 min
  # - platform: command_line #working good in ubuntu  - not working on Docker
  #   command: "bash /config/scripts/GetGPUTemp.sh"
  #   name: 'GPU temp'
  #   unit_of_measurement: "°מעלות" #temperature in C
  #   scan_interval: 120 #2 min
  