################################################################################
#
#SCRIPT
#More scripts at Folder /scripts
#################################################################################

  #a button to restart HA 
  restart_home_assistant:
    alias: Restart Home Assistant
    sequence:
      - alias: Restart Home Assistant
        service: homeassistant.restart
  #just to test if the push working
  test_push:
    alias: 'test_push'
    sequence:
      - service: notify.mobile_app_eliran_iphone
        data:
          message: 'This is a test!'
          data:
            attachment: 
              url: https://67.media.tumblr.com/ab04c028a5244377a0ab96e73915e584/tumblr_nfn3ztLjxk1tq4of6o1_400.gif
      - service: notify.mobile_app_smarthome_ipad
        data:
          message: 'This is a test!'
          data:
            attachment: 
              url: https://67.media.tumblr.com/ab04c028a5244377a0ab96e73915e584/tumblr_nfn3ztLjxk1tq4of6o1_400.gif        
      - service: notify.mobile_app_shiran_iphone
        data:
          message: 'This is a test!'
          data:
            attachment: 
              url: https://67.media.tumblr.com/ab04c028a5244377a0ab96e73915e584/tumblr_nfn3ztLjxk1tq4of6o1_400.gif                          

###########################################
  timer_off_boiler: #script to turn off the boiler after X mins that been choose before
    alias: הדלק טיימר דוד
    sequence:
      - delay: '00:{{ states.input_number.slider_boiler.state | int }}:00'
      - service: switch.turn_off
        data:
          entity_id: switch.mqtt_pow1
          
############################################### 
  #a button to use speed test manualy 
  update_speedtestnet:
    alias: Update SpeedtestNet info
    sequence:
      - service: speedtestdotnet.speedtest
############################################### 
  reboot_router:
     alias: 'Reboot Router'
     sequence:
       - service: shell_command.reboot_router           
###############################################
  reboot_ap:
     alias: 'Reboot Access Point'
     sequence:
       - service: shell_command.reboot_ap          
###############################################
  backup_ha_and_move_backup_to_unraid:
     alias: 'Backup All Ha and Move To Unraid'
     sequence:
       - service: shell_command.backup_ha_and_move_backup_to_unraid
###############################################
  backup_ha_config:
     alias: 'Backup Home Assitant config'
     sequence:
       - service: shell_command.backup_hass_config       
###############################################
  install_after_update_hass:
     alias: 'install after Update Hass'
     sequence:
       - service: shell_command.install_after_update_hass     
###############################################
  open_rdp_port:
     alias: 'Open RDP port'
     sequence:
       - service: shell_command.open_rdp_port  
###############################################
  close_rdp_port:
     alias: 'Close RDP port'
     sequence:
       - service: shell_command.close_rdp_port        
###############################################
# "power1" is good for me,in others sonoff setups maybe "power2"/"power3" etc...
  check_sonoffs_tasmota_status:
      sequence:
        - service: mqtt.publish
          data_template:
            topic: "cmnd/sonoffs/power1" #Update the power state of all the sonoffs
            payload: ""
###############################################            
  white_night_light:
    alias: White
    sequence:
      - service: homeassistant.turn_on
        entity_id: light.gateway_light
        data:
          brightness: 255
          rgb_color: [255,255,255]
###############################################            
  purple_night_light:
    alias: Purple
    sequence:
      - service: homeassistant.turn_on
        entity_id: light.gateway_light
        data:
          brightness: 255
          rgb_color: [88,0,82]
###############################################            
  flash_gateway1:
    alias: Flash Gateway On
    sequence:
      - service: light.turn_on
        data:
          entity_id: light.gateway_light_34ce0091234
          color_name: red
          brightness: 255
      - delay:
          # supports seconds, milliseconds, minutes, hours
          milliseconds: 600
      - service: script.turn_on
        data:
          entity_id: script.flash_gateway2
###############################################            
  flash_gateway2:
    alias: Flash Gateway OnV2
    sequence:
      - service: light.turn_off
        data:
          entity_id: light.gateway_light_34ce0091234
###############################################            
      - service: script.turn_on
        data:
          entity_id: script.flash_gateway1       
################################################################################
## NOT
## IN 
## USE
## All the entitys/Code below is working , just not in use in my case 
## (Switch Protocol, Component Etc... ) you can use it :)
################################################################################


###############################################
  # backup_all_os:
  #   alias: 'Backup RPI To USB'
  #   sequence:
  #     - service: shell_command.backup_all_rpi_to_usb
###############################################       


#for Xiaomi IR
#   turn_on_tv:
#     sequence:
#       - service: remote.send_command
#         entity_id: 'remote.ir_controller'
#         data:
#           command:
#             - 'turn_on_tv'
#   turn_off_tv:
#     sequence:
#       - service: remote.send_command
#         entity_id: 'remote.ir_controller'
#         data:
#           command:
#             - 'turn_off_tv'
#   tv_input:
#       sequence:
#         - service: remote.send_command
#           entity_id: 'remote.ir_controller'
#           data:
#             command:
#               - 'tv_input'
#   tv_vol_up:
#       sequence:
#         - service: remote.send_command
#           entity_id: 'remote.ir_controller'
#           data:
#             command:
#               - 'tv_vol_up'
#   tv_vol_down:
#       sequence:
#         - service: remote.send_command
#           entity_id: 'remote.ir_controller'
#           data:
#             command:
#               - 'tv_vol_down'
              
              
#   ac_turn_on:
#       sequence:
#         - service: remote.send_command
#           entity_id: 'remote.ir_controller'
#           data:
#             command:
#               - 'ac_turn_on'
#   ac_turn_off:
#       sequence:
#         - service: remote.send_command
#           entity_id: 'remote.ir_controller'
#           data:
#             command: 
#               - 'ac_turn_off'       
#   ac_fan_speed:
#       sequence:
#         - service: remote.send_command
#           entity_id: 'remote.ir_controller'
#           data:
#             command: 
#               - 'ac_fan_speed'               